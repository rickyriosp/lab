{
 "Resources": {
  "DocumentsBucket9EC9DEB9": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/DocumentsBucket/Resource"
   }
  },
  "NetworkingConstructAppVPC93DB1567": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/Resource"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet1Subnet660D22C8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "NetworkingConstructAppVPC93DB1567"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1/Subnet"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet1RouteTableADE0E594": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "NetworkingConstructAppVPC93DB1567"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1/RouteTable"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet1RouteTableAssociation4D96D001": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet1RouteTableADE0E594"
    },
    "SubnetId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet1Subnet660D22C8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet1DefaultRouteBF81A149": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "NetworkingConstructAppVPCIGW91624FC1"
    },
    "RouteTableId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet1RouteTableADE0E594"
    }
   },
   "DependsOn": [
    "NetworkingConstructAppVPCVPCGWE6FD25E8"
   ],
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1/DefaultRoute"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet1EIPA96CC89C": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1/EIP"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet1NATGatewayD224EF80": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "NetworkingConstructAppVPCPublicSubnet1EIPA96CC89C",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet1Subnet660D22C8"
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "NetworkingConstructAppVPCPublicSubnet1DefaultRouteBF81A149",
    "NetworkingConstructAppVPCPublicSubnet1RouteTableAssociation4D96D001"
   ],
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet1/NATGateway"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet2SubnetDB4E73CE": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "NetworkingConstructAppVPC93DB1567"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2/Subnet"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet2RouteTable23D10B5F": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "NetworkingConstructAppVPC93DB1567"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2/RouteTable"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet2RouteTableAssociation4DBBE32A": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet2RouteTable23D10B5F"
    },
    "SubnetId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet2SubnetDB4E73CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet2DefaultRoute6B1D8435": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "NetworkingConstructAppVPCIGW91624FC1"
    },
    "RouteTableId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet2RouteTable23D10B5F"
    }
   },
   "DependsOn": [
    "NetworkingConstructAppVPCVPCGWE6FD25E8"
   ],
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2/DefaultRoute"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet2EIP5C2BE200": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2/EIP"
   }
  },
  "NetworkingConstructAppVPCPublicSubnet2NATGateway39AF7173": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "NetworkingConstructAppVPCPublicSubnet2EIP5C2BE200",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet2SubnetDB4E73CE"
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "NetworkingConstructAppVPCPublicSubnet2DefaultRoute6B1D8435",
    "NetworkingConstructAppVPCPublicSubnet2RouteTableAssociation4DBBE32A"
   ],
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PublicSubnet2/NATGateway"
   }
  },
  "NetworkingConstructAppVPCPrivateSubnet1Subnet1F579DA7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "NetworkingConstructAppVPC93DB1567"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet1/Subnet"
   }
  },
  "NetworkingConstructAppVPCPrivateSubnet1RouteTableB0081448": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "NetworkingConstructAppVPC93DB1567"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet1/RouteTable"
   }
  },
  "NetworkingConstructAppVPCPrivateSubnet1RouteTableAssociationFF8FC898": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NetworkingConstructAppVPCPrivateSubnet1RouteTableB0081448"
    },
    "SubnetId": {
     "Ref": "NetworkingConstructAppVPCPrivateSubnet1Subnet1F579DA7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "NetworkingConstructAppVPCPrivateSubnet1DefaultRouteE004414E": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet1NATGatewayD224EF80"
    },
    "RouteTableId": {
     "Ref": "NetworkingConstructAppVPCPrivateSubnet1RouteTableB0081448"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "NetworkingConstructAppVPCPrivateSubnet2SubnetC41764F1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "NetworkingConstructAppVPC93DB1567"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet2/Subnet"
   }
  },
  "NetworkingConstructAppVPCPrivateSubnet2RouteTable245388A8": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "NetworkingConstructAppVPC93DB1567"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet2/RouteTable"
   }
  },
  "NetworkingConstructAppVPCPrivateSubnet2RouteTableAssociation9244A245": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "NetworkingConstructAppVPCPrivateSubnet2RouteTable245388A8"
    },
    "SubnetId": {
     "Ref": "NetworkingConstructAppVPCPrivateSubnet2SubnetC41764F1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "NetworkingConstructAppVPCPrivateSubnet2DefaultRouteB1917E94": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "NetworkingConstructAppVPCPublicSubnet2NATGateway39AF7173"
    },
    "RouteTableId": {
     "Ref": "NetworkingConstructAppVPCPrivateSubnet2RouteTable245388A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "NetworkingConstructAppVPCIGW91624FC1": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "Networking"
     },
     {
      "Key": "Name",
      "Value": "TypescriptCdkStack/NetworkingConstruct/AppVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/IGW"
   }
  },
  "NetworkingConstructAppVPCVPCGWE6FD25E8": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "NetworkingConstructAppVPCIGW91624FC1"
    },
    "VpcId": {
     "Ref": "NetworkingConstructAppVPC93DB1567"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/VPCGW"
   }
  },
  "NetworkingConstructAppVPCRestrictDefaultSecurityGroupCustomResource32CFC1EA": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "NetworkingConstructAppVPC93DB1567",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/NetworkingConstruct/AppVPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "NetworkingConstructAppVPC93DB1567",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "DocumentManagementFunctionGetDocumentsFunctionServiceRoleF2F57F21": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "API"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/DocumentManagementFunction/GetDocumentsFunction/ServiceRole/Resource"
   }
  },
  "DocumentManagementFunctionGetDocumentsFunction8C166C80": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "60c86fcba7cf0b3f7b24651b9f3ed5fe3c03b9250f399d47a51dfce089fd4575.zip"
    },
    "Handler": "index.getDocuments",
    "Role": {
     "Fn::GetAtt": [
      "DocumentManagementFunctionGetDocumentsFunctionServiceRoleF2F57F21",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "DocumentManagement"
     },
     {
      "Key": "Environment",
      "Value": "Development"
     },
     {
      "Key": "Module",
      "Value": "API"
     }
    ]
   },
   "DependsOn": [
    "DocumentManagementFunctionGetDocumentsFunctionServiceRoleF2F57F21"
   ],
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/DocumentManagementFunction/GetDocumentsFunction/Resource",
    "aws:asset:path": "asset.60c86fcba7cf0b3f7b24651b9f3ed5fe3c03b9250f399d47a51dfce089fd4575",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11Qy26DMBD8ltwdNw8pd4LaKIemCKpco8UsqRNYI3adqEL8e2VIQ9XTzK5ndkZe6eVmoxczuPPcFNd5ZXPdZQLmquDOp47Xutt6c0VRcUkPNsIWGHuFZqW7Y2PC8zGJVeLzyprM5zRaJpY6L/gJeYXTftpFzM5YEOvoKQ7kdZ8EOIDsQPAO3ypp7Q0Ep8N7EmwJn4KxyWOKRMB81UjSqwrqvIATuQIvrA8DvHkyQ6iFWnepG9sF7BWvT8CMwjoK8PDruKRfVx/EH14aLypFdr41qGLP4uppLOkvf4emsXT+p0pad7MFtuFT1ZCWCZwHXUmxo8KOcaG7vvDLbbXQy6VezC5s7bz1JLZGnY74AxeE0b3VAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "TypescriptCdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "DocumentsBucketNameExport": {
   "Value": {
    "Ref": "DocumentsBucket9EC9DEB9"
   },
   "Export": {
    "Name": "DocumentsBucketName"
   }
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}